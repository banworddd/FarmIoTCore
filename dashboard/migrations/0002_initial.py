# Generated by Django 5.1.7 on 2025-04-11 11:20

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dashboard', '0001_initial'),
        ('users', '0005_alter_customuser_email_alter_customuser_first_name_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='device',
            name='farm',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='users.farm', verbose_name='Ферма'),
        ),
        migrations.AddField(
            model_name='devicecommand',
            name='device',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commands', to='dashboard.device', verbose_name='Устройство'),
        ),
        migrations.AddField(
            model_name='devicecommand',
            name='issued_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Кем отправлено'),
        ),
        migrations.AddField(
            model_name='deviceevent',
            name='device',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='dashboard.device', verbose_name='Устройство'),
        ),
        migrations.AddField(
            model_name='deviceevent',
            name='resolved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Кем решено'),
        ),
        migrations.AddField(
            model_name='devicelocation',
            name='device',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='location', to='dashboard.device', verbose_name='Устройство'),
        ),
        migrations.AddField(
            model_name='devicemodel',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Создано пользователем'),
        ),
        migrations.AddField(
            model_name='device',
            name='model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.devicemodel', verbose_name='Модель устройства'),
        ),
        migrations.AddField(
            model_name='devicestatus',
            name='device',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuses', to='dashboard.device', verbose_name='Устройство'),
        ),
        migrations.AddField(
            model_name='sensordata',
            name='device',
            field=models.ForeignKey(limit_choices_to={'model__device_type': 'sensor'}, on_delete=django.db.models.deletion.CASCADE, related_name='sensor_data', to='dashboard.device', verbose_name='Устройство'),
        ),
        migrations.AddField(
            model_name='zone',
            name='farm',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='zones', to='users.farm', verbose_name='Ферма'),
        ),
        migrations.AddField(
            model_name='zone',
            name='managers',
            field=models.ManyToManyField(blank=True, related_name='managed_zones', to=settings.AUTH_USER_MODEL, verbose_name='Менеджеры зоны'),
        ),
        migrations.AddField(
            model_name='devicelocation',
            name='zone',
            field=models.ForeignKey(blank=True, limit_choices_to={'owner': models.F('device__owner')}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.zone', verbose_name='Зона'),
        ),
        migrations.AddIndex(
            model_name='devicecommand',
            index=models.Index(fields=['-issued_at'], name='dashboard_d_issued__a0de7b_idx'),
        ),
        migrations.AddIndex(
            model_name='devicecommand',
            index=models.Index(fields=['device', 'status'], name='dashboard_d_device__4387c8_idx'),
        ),
        migrations.AddIndex(
            model_name='deviceevent',
            index=models.Index(fields=['-timestamp'], name='dashboard_d_timesta_dbdf71_idx'),
        ),
        migrations.AddIndex(
            model_name='deviceevent',
            index=models.Index(fields=['device', 'event_type'], name='dashboard_d_device__a03f2c_idx'),
        ),
        migrations.AddIndex(
            model_name='deviceevent',
            index=models.Index(fields=['resolved'], name='dashboard_d_resolve_a8ce3e_idx'),
        ),
        migrations.AddIndex(
            model_name='device',
            index=models.Index(fields=['is_active'], name='dashboard_d_is_acti_5274ef_idx'),
        ),
        migrations.AddIndex(
            model_name='device',
            index=models.Index(fields=['farm'], name='dashboard_d_farm_id_4a4e98_idx'),
        ),
        migrations.AddIndex(
            model_name='devicestatus',
            index=models.Index(fields=['-timestamp'], name='dashboard_d_timesta_34510a_idx'),
        ),
        migrations.AddIndex(
            model_name='devicestatus',
            index=models.Index(fields=['device', 'online'], name='dashboard_d_device__6e1bf4_idx'),
        ),
        migrations.AddIndex(
            model_name='sensordata',
            index=models.Index(fields=['-timestamp'], name='dashboard_s_timesta_148537_idx'),
        ),
        migrations.AddIndex(
            model_name='sensordata',
            index=models.Index(fields=['device'], name='dashboard_s_device__041f48_idx'),
        ),
        migrations.AddConstraint(
            model_name='zone',
            constraint=models.UniqueConstraint(fields=('name', 'farm'), name='unique_zone_name_per_farm'),
        ),
    ]
