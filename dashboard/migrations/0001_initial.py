# Generated by Django 5.1.7 on 2025-04-11 11:20

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DeviceCommand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('command', models.CharField(max_length=100, verbose_name='Команда')),
                ('parameters', models.JSONField(blank=True, null=True, verbose_name='Параметры')),
                ('issued_at', models.DateTimeField(auto_now_add=True, verbose_name='Время отправки')),
                ('executed_at', models.DateTimeField(blank=True, null=True, verbose_name='Время выполнения')),
                ('status', models.CharField(choices=[('pending', 'Ожидает'), ('sent', 'Отправлено'), ('executed', 'Выполнено'), ('failed', 'Ошибка'), ('timeout', 'Таймаут')], default='pending', max_length=20, verbose_name='Статус')),
                ('response', models.JSONField(blank=True, null=True, verbose_name='Ответ устройства')),
                ('timeout', models.PositiveIntegerField(default=30, verbose_name='Таймаут (сек)')),
            ],
            options={
                'verbose_name': 'Команда устройства',
                'verbose_name_plural': 'Команды устройств',
                'ordering': ['-issued_at'],
            },
        ),
        migrations.CreateModel(
            name='DeviceEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('error', 'Ошибка'), ('warning', 'Предупреждение'), ('info', 'Информация'), ('maintenance', 'Обслуживание'), ('alert', 'Тревога')], max_length=20, verbose_name='Тип события')),
                ('severity', models.CharField(choices=[('critical', 'Критический'), ('high', 'Высокий'), ('medium', 'Средний'), ('low', 'Низкий')], default='medium', max_length=20, verbose_name='Уровень важности')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Временная метка')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('data', models.JSONField(blank=True, null=True, verbose_name='Данные события')),
                ('resolved', models.BooleanField(default=False, verbose_name='Решено')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='Время решения')),
            ],
            options={
                'verbose_name': 'Событие устройства',
                'verbose_name_plural': 'События устройств',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='DeviceLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Широта')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Долгота')),
                ('installation_notes', models.TextField(blank=True, verbose_name='Примечания по установке')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление')),
            ],
            options={
                'verbose_name': 'Местоположение устройства',
                'verbose_name_plural': 'Местоположения устройств',
            },
        ),
        migrations.CreateModel(
            name='DeviceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название модели')),
                ('manufacturer', models.CharField(max_length=100, verbose_name='Производитель')),
                ('device_type', models.CharField(choices=[('sensor', 'Датчик'), ('actuator', 'Активатор'), ('controller', 'Контроллер'), ('gateway', 'Шлюз'), ('camera', 'Камера'), ('robot', 'Робот')], max_length=50, verbose_name='Тип устройства')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('specifications', models.JSONField(blank=True, default=dict, verbose_name='Характеристики')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Модель устройства',
                'verbose_name_plural': 'Модели устройств',
                'ordering': ['manufacturer', 'name'],
            },
        ),
        migrations.CreateModel(
            name='DeviceStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Временная метка')),
                ('online', models.BooleanField(verbose_name='Онлайн')),
                ('cpu_usage', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Использование CPU (%)')),
                ('memory_usage', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Использование памяти (%)')),
                ('disk_usage', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Использование диска (%)')),
                ('signal_strength', models.FloatField(blank=True, null=True, verbose_name='Сила сигнала (dBm)')),
                ('additional_info', models.JSONField(blank=True, null=True, verbose_name='Дополнительная информация')),
            ],
            options={
                'verbose_name': 'Статус устройства',
                'verbose_name_plural': 'Статусы устройств',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SensorData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Временная метка')),
                ('temperature', models.FloatField(blank=True, null=True, verbose_name='Температура (°C)')),
                ('humidity', models.FloatField(blank=True, null=True, verbose_name='Влажность (%)')),
                ('soil_moisture', models.FloatField(blank=True, null=True, verbose_name='Влажность почвы (%)')),
                ('light_intensity', models.FloatField(blank=True, null=True, verbose_name='Интенсивность света (люкс)')),
                ('ph_level', models.FloatField(blank=True, null=True, verbose_name='Уровень pH')),
                ('battery_level', models.FloatField(blank=True, null=True, verbose_name='Уровень заряда батареи (%)')),
                ('additional_data', models.JSONField(blank=True, default=dict, verbose_name='Дополнительные данные')),
            ],
            options={
                'verbose_name': 'Данные датчика',
                'verbose_name_plural': 'Данные датчиков',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название зоны')),
                ('zone_type', models.CharField(choices=[('greenhouse', 'Теплица'), ('field', 'Поле'), ('storage', 'Склад'), ('livestock', 'Животноводческий комплекс'), ('other', 'Другое')], default='field', max_length=20, verbose_name='Тип зоны')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('area', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Площадь (кв.м)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Зона',
                'verbose_name_plural': 'Зоны',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название устройства')),
                ('serial_number', models.CharField(max_length=50, unique=True, verbose_name='Серийный номер')),
                ('connection_type', models.CharField(choices=[('wifi', 'Wi-Fi'), ('ethernet', 'Ethernet'), ('lora', 'LoRa'), ('zigbee', 'Zigbee'), ('cellular', 'Сотовая связь'), ('bluetooth', 'Bluetooth'), ('rs485', 'RS-485')], default='wifi', max_length=20, verbose_name='Тип подключения')),
                ('mac_address', models.CharField(blank=True, max_length=17, null=True, unique=True, verbose_name='MAC-адрес')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, unique=True, verbose_name='IP-адрес')),
                ('firmware_version', models.CharField(blank=True, max_length=20, verbose_name='Версия прошивки')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно')),
                ('installation_date', models.DateField(blank=True, null=True, verbose_name='Дата установки')),
                ('last_maintenance', models.DateField(blank=True, null=True, verbose_name='Последнее обслуживание')),
                ('maintenance_interval', models.PositiveIntegerField(blank=True, null=True, verbose_name='Интервал обслуживания (дни)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='added_devices', to=settings.AUTH_USER_MODEL, verbose_name='Добавлено пользователем')),
            ],
            options={
                'verbose_name': 'Устройство',
                'verbose_name_plural': 'Устройства',
                'ordering': ['name'],
            },
        ),
    ]
